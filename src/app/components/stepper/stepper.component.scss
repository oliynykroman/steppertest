@use 'sass:math';

:host {
  --labelColor: var(--gray-1);
  --labelColorActive: var(--light);
  --activeColor: var(--accent);
  --stepNumberColor: var(--gray-4);
  --stepNumberColorActive: var(--dark);
  --background: var(--gray-2);
  --borerColor: var(--gray-3);
}

.stepper {
  display: flex;
  color: var(--labelColor);
}

.steps {
  display: flex;
  flex-wrap: nowrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

.light {
  --labelColor: red;
  --labelColorActive: green;
  --activeColor: yellow;
  --stepNumberColor: violet;
  --stepNumberColorActive: blue;
  --background: skyblue;
  --borerColor: orange;
}

.horizontal {

  flex-direction: column;

  .stepper-content {
    margin-top: 30px;
  }

  .steps {
    flex-direction: row;
  }

  .step {
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    min-width: 200px;
    flex: 1;

    &:first-child {
      &:before, &:after {
        bottom: 6px;
        left: 0;
        height: 4px;
        border-radius: 37px;
      }

      &:before {
        width: calc(var(--step) * 100%);
        transition: width .3s cubic-bezier(.32, .28, .38, .95);
      }

      &:after {
        width: 100%;
        transition: transform .3s cubic-bezier(.32, .28, .38, .95);
        transform: translate3d(calc(var(--step) * 100%), 0, 0);
      }
    }

    &-label {
      margin-bottom: 10px;
    }

  }
}

.vertical {
  flex-direction: row;

  .stepper-content {
    margin-left: 30px;
  }

  .steps {
    flex-direction: column;
  }

  .step {
    flex-direction: row-reverse;
    align-items: center;
    justify-content: flex-end;
    min-height: 100px;

    &:first-child {
      &:before, &:after {
        top: 0;
        left: 8px;
        width: 4px;
        border-radius: 37px;
      }

      &:before {
        height: calc(var(--step) * 100%);
        transition: height .3s cubic-bezier(.32, .28, .38, .95);

      }

      &:after {
        height: 100%;
        transition: transform .3s cubic-bezier(.32, .28, .38, .95);
        transform: translate3d(0, calc(var(--step) * 100%), 0);
      }
    }

    &-label {
      margin-left: 10px;
    }
  }
}

.step {
  display: flex;
  border: none;
  outline: none;
  box-shadow: none;
  background: transparent;
  position: relative;
  transition: color .5s ease-out;
  cursor: pointer;

  &:first-child {
    &:before, &:after {
      content: '';
      position: absolute;
    }

    &:before {
      opacity: .8;
      background: var(--background);
    }

    &:after {
      background: var(--activeColor);
    }
  }

  &:hover {
    --labelColor: var(--labelColorActive);
  }

  &-label {
    text-align: center;
    font-weight: 400;
    font-size: 16px;
    line-height: math.div(22, 16);
    color: currentColor;
  }

  &-current {
    color: var(--stepNumberColor);
    background: var(--background);
    border: 1px solid var(--borerColor);
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: grid;
    grid-template-rows: 1fr;
    grid-auto-columns: 1fr;
    font-size: 10px;
    font-weight: 400;
    line-height: 10px;
    letter-spacing: -0.02em;
    align-items: center;
    justify-items: center;
    z-index: 1;
    transition: all .5s ease;

    &__tick {
      width: 11px;
      grid-row: 1/2;
      grid-column: 1/2;
      opacity: 0;
      transition: opacity .3s ease-out;

      path {
        stroke: var(--stepNumberColor);
      }
    }

    &__number {
      grid-row: 1/2;
      grid-column: 1/2;
      transition: opacity .3s .1s ease-out;
    }
  }

  &.prev {
    .step-current {
      --borerColor: var(--background);

      &__tick {
        opacity: 1;
        transition: opacity .3s .1s ease-out;
      }

      &__number {
        opacity: 0;
        transition: opacity .3s ease-out;
      }
    }

    &:first-child {
      &:after {
        border-radius: 0 37px 37px 0;
      }
    }
  }

  &.isActive {
    color: var(--labelColorActive);

    .step-current {
      --background: var(--activeColor);
      --borerColor: var(--activeColor);
      --stepNumberColor: var(--stepNumberColorActive);
    }
  }
}
